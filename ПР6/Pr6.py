import pandas as pd
import matplotlib.pyplot as plt

# === 1. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ ===
files = {
    "PC": "PC.csv",
    "Microwave ON": "MicrOn.csv",
    "Microwave OFF": "MicrOFF.csv",
    "Room Center": "Room.csv"
}

datasets = {}
for label, path in files.items():
    datasets[label] = pd.read_csv(path, delimiter=';', decimal=',')

# === 2. –ê–Ω–∞–ª—ñ–∑ —ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ===
print("=== –ê–ù–ê–õ–Ü–ó –ú–ê–ì–ù–Ü–¢–ù–û–ì–û –ü–û–õ–Ø ===")
overall_means = []

for label, df in datasets.items():
    abs_field = df["Absolute field (¬µT)"]
    mean_val = abs_field.mean()
    min_val = abs_field.min()
    max_val = abs_field.max()
    std_val = abs_field.std()

    overall_means.append(mean_val)

    print(f"\n[{label}]")
    print(f"  –°–µ—Ä–µ–¥–Ω—î: {mean_val:.2f} ¬µT")
    print(f"  –ú—ñ–Ω—ñ–º—É–º: {min_val:.2f} ¬µT")
    print(f"  –ú–∞–∫—Å–∏–º—É–º: {max_val:.2f} ¬µT")
    print(f"  –°—Ç. –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è: {std_val:.2f} ¬µT")

    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞ —Ä—ñ–≤–Ω–µ–º
    if mean_val < 50:
        print("  ‚úÖ –ù–∏–∑—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å –º–∞–≥–Ω—ñ—Ç–Ω–æ–≥–æ –ø–æ–ª—è (–Ω–æ—Ä–º–∞)")
    elif mean_val <= 70:
        print("  ‚ö†Ô∏è –ü–æ–º—ñ—Ä–Ω–∏–π —Ä—ñ–≤–µ–Ω—å (–∑ –æ–±–µ—Ä–µ–∂–Ω—ñ—Å—Ç—é)")
    else:
        print("  üî¥ –í–∏—Å–æ–∫–∏–π —Ä—ñ–≤–µ–Ω—å! (–Ω–µ–±–∞–∂–∞–Ω–µ —Ç—Ä–∏–≤–∞–ª–µ –ø–µ—Ä–µ–±—É–≤–∞–Ω–Ω—è)")

# === 3. –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ –∑ –∑–∞–≥–∞–ª—å–Ω–∏–º —Å–µ—Ä–µ–¥–Ω—ñ–º ===
overall_avg = sum(overall_means) / len(overall_means)

plt.figure(figsize=(14, 7))
for label, df in datasets.items():
    plt.plot(df["Time (s)"], df["Absolute field (¬µT)"], label=label)

plt.axhline(overall_avg, color='black', linestyle='--', linewidth=1.5,
            label=f"–ó–∞–≥–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–Ω—î: {overall_avg:.2f} ¬µT")

plt.title("–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –º–∞–≥–Ω—ñ—Ç–Ω–æ–≥–æ –ø–æ–ª—è —É —Ä—ñ–∑–Ω–∏—Ö –∑–æ–Ω–∞—Ö")
plt.xlabel("–ß–∞—Å (—Å)")
plt.ylabel("–ú–∞–≥–Ω—ñ—Ç–Ω–µ –ø–æ–ª–µ (¬µT)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
